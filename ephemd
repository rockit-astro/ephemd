#!/usr/bin/env python3
#
# This file is part of ephemd.
#
# ephemd is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ephemd is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tngd.  If not, see <http://www.gnu.org/licenses/>.

"""Exposes the current sun and moon positions for Warwick La Palma telescopes environment daemon"""

import datetime

from astropy.coordinates import (
    get_sun,
    get_moon,
    EarthLocation,
    AltAz
)

from astropy.time import Time
from astropy import units as u
import numpy as np
import Pyro4
from warwick.observatory.common import daemons


# Measured from GPS receiver
SITE_LATITUDE = 28.7603135
SITE_LONGITUDE = -17.8796168
SITE_ELEVATION = 2387

# pylint: disable=too-few-public-methods

def moon_illumination(sun_coord, moon_coord):
    """Calculate the moon illumination as a fraction between 0 and 1"""
    elongation = sun_coord.separation(moon_coord)
    phase = np.arctan2(sun_coord.distance * np.sin(elongation),
                       moon_coord.distance - sun_coord.distance * np.cos(elongation))
    return ((1 + np.cos(phase)) / 2.0).value


class EphemerisDaemon:
    """Wraps a web request to the TNG weather feed"""
    def __init__(self):
        # pylint: disable=no-member
        self._lapalma = EarthLocation(lat=SITE_LATITUDE*u.deg,
                                      lon=SITE_LONGITUDE*u.deg,
                                      height=SITE_ELEVATION*u.m)
        # pylint: enable=no-member

    @Pyro4.expose
    def last_measurement(self):
        """Query the latest valid measurement.
        May return None if no data is available"""

        now_date = datetime.datetime.utcnow()
        now_time = Time(now_date, format='datetime', scale='utc')
        frame = AltAz(obstime=now_time, location=self._lapalma)
        sun = get_sun(now_time).transform_to(frame)
        moon = get_moon(now_time).transform_to(frame)

        return {
            'date': now_date.strftime('%Y-%m-%dT%H:%M:%SZ'),
            'sun_alt': sun.alt.value,
            'moon_alt': moon.alt.value,
            'moon_percent_illumination': round(100 * moon_illumination(sun, moon), 1)
        }


if __name__ == '__main__':
    daemons.observatory_ephemeris.launch(EphemerisDaemon())
